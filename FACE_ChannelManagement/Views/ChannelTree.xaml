<UserControl x:Class="FACE_ChannelManagement.UserControls.ChannelTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:converter="clr-namespace:SING.Data.Controls.TreeControl.Converter;assembly=SING.Data"
             xmlns:selector="clr-namespace:FACE_ChannelManagement.ItemTemplateSelector"
             xmlns:utilities="clr-namespace:FACE_ChannelManagement.Utilities"
             xmlns:attach="clr-namespace:FACE_ChannelManagement.Utilities"
             mc:Ignorable="d" x:Name="Tree">

    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FACE_ChannelManagement;component/StyleResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="RadDropDownButtonStyle" TargetType="telerik:RadDropDownButton">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="IsOpen" Value="False"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="Wheat"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Visibility" Value="{Binding MenuDropVisibility}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="telerik:RadDropDownButton">
                            <Grid>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Grid Grid.Column="1" Background="Transparent">
                                        <Path x:Name="DropDownIndicator" Fill="White" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="5,4,5,0" Visibility="{Binding DropDownIndicatorVisibility}" VerticalAlignment="Top"
                                              RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L6.5000002,0.5 6.5000002,0.66296414 6.6629643,0.66296414 6.6629643,6.6629641 5.6629643,6.6629641 5.6629643,1.5 0.5,1.5 z">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="135" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Grid>
                                <Popup x:Name="DropDownPopup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsOpen,RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" StaysOpen="False">
                                    <Grid>
                                        <Border Background="#66000000" BorderThickness="3" BorderBrush="#FF494E59">
                                            <Border BorderBrush="#B2AFAFAF" BorderThickness="1,1,1,1" Background="#F43A3D45">
                                                <ContentPresenter x:Name="DropDownPopupContent" ContentTemplate="{TemplateBinding DropDownContentTemplate}" Content="{TemplateBinding DropDownContent}"
                                                                  DataContext="{Binding DataContext,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            </Border>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsOpen" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToggleButton" x:Key="ExpanderStyle">
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>

                            </ControlTemplate.Triggers>

                            <Grid>
                                <Grid x:Name="CollapsedStates" >
                                    <Path x:Name="CollapsedVisual" Height="10" Width="5" 
										Stretch="Fill" Stroke="#FFE6E6E6" 
										Data="M1098.3334,527.90997 L1098.3334,536.30115 L1102.2695,532.36487 z"
										RenderTransformOrigin="0.5,0.5" />
                                </Grid>
                                <Grid x:Name="ExpandedStates" Opacity="0">
                                    <Path x:Name="ExpandedVisual" Height="10" Width="5" IsHitTestVisible="False"
										Fill="#FFE6E6E6" Stretch="Fill" Stroke="#FFE6E6E6" 
										Data="M1098.3334,527.90997 L1098.3334,536.30115 L1102.2695,532.36487 z"
										RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="45" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TreeViewItemStyle" TargetType="telerik:RadTreeViewItem">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
                <!--<Setter Property="DefaultImageSrc" Value="{Binding ImageUrl}" />-->
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            </Style>

            <DataTemplate x:Key="EditTreeViewTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding Text, Mode=TwoWay}" Tag="{Binding Id}" Margin="5 0 0 0" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="Team">
                <StackPanel Orientation="Horizontal">
                    <!--<Image Width="10" x:Name="MeetingGroup_Image"  Source="../Images/channelLeftCameraNotlight.png"></Image>-->
                    <TextBlock Margin="5,0,0,0" Foreground="#FFE6E6E6" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Text="{Binding Name}" />
                </StackPanel>
            </DataTemplate>

            <HierarchicalDataTemplate x:Key="Division" ItemTemplate="{StaticResource Team}" ItemsSource="{Binding Teams}">
                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Margin="5 0 0 0"/>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="League" ItemTemplate="{StaticResource Division}" ItemsSource="{Binding Divisions}">
                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Margin="5 0 0 0"/>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="Leagued" ItemTemplate="{StaticResource League}" ItemsSource="{Binding Leagues}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Margin="5 0 0 0"/>
                    <telerik:RadDropDownButton BorderThickness="0" Style="{StaticResource RadDropDownButtonStyle}" Margin="100,0,0,0" VerticalAlignment="Stretch" DropDownPlacement="Bottom" RenderTransformOrigin="0.5,0.5">
                        <telerik:RadDropDownButton.DropDownContent>
                            <telerik:RadContextMenu Width="100" Margin="0 0 -3 -3" BorderThickness="0" FontWeight="Bold">
                                <telerik:RadMenuItem Header="新增"/>
                                <telerik:RadMenuItem Header="修改" />
                                <telerik:RadMenuItem Header="删除"/>
                            </telerik:RadContextMenu>
                        </telerik:RadDropDownButton.DropDownContent>
                    </telerik:RadDropDownButton>
                </StackPanel>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="TreeViewItemTemplate" ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <Image x:Name="bgimg" Source="../Images/region_24px.png" Height="20" Width="20" Margin="5 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                        <Label x:Name="regionName" Content="{Binding Converter={StaticResource StringformatConverter},
                                        ConverterParameter=5,Path=Text,Mode=TwoWay}" Margin="5 0 0 0" Tag="{Binding Id}" FontSize="14">
                            <Label.ToolTip>
                                <TextBlock Text="{Binding Path=Text,Mode=TwoWay}" FontSize="20" FontWeight="Bold"/>
                            </Label.ToolTip>
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInEdit}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInEdit}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <TextBox Text="{Binding Text,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="5 0 0 0" Tag="{Binding Id}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterKeyCommand}"/>
                                <!--<KeyBinding Key="Tab" Command="{Binding  RelativeSource={RelativeSource Mode=FindAncestor, 
                            AncestorType={x:Type UserControl}}, Path=DataContext.TabKeyCommand}"/>-->
                            </TextBox.InputBindings>
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsInEdit}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsInEdit}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </StackPanel>
                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Region}" Value="{x:Null}">
                        <Setter TargetName="bgimg" Property="Source" Value="../Images/BlueCamera.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Channel}" Value="{x:Null}">
                        <Setter TargetName="bgimg" Property="Source" Value="../Images/region_24px.png"/>
                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>

            <Style x:Key="TViewItemStyle" TargetType="{x:Type telerik:RadTreeView}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="AutoScrollToSelectedItem" Value="True"/>
                <!--<Setter Property="telerik:StyleManager.Theme" Value="Transparent"/>-->
                <!--<Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>-->
                <Setter Property="ForceCursor" Value="True"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="IsLineEnabled" Value="False"/>
                <Setter Property="IsRootLinesEnabled" Value="False"/>
                <Setter Property="IsExpandOnDblClickEnabled" Value="True"/>
                <Setter Property="IsExpandOnSingleClickEnabled" Value="False"/>
                <Setter Property="IsOptionElementsEnabled" Value="False"/>
                <Setter Property="IsEditable" Value="False"/>
                <Setter Property="IsDragDropEnabled" Value="False"/>
                <Setter Property="IsTriStateMode" Value="False"/>
                <Setter Property="SelectedValuePath" Value="Name"/>
                <Setter Property="ExpanderStyle" Value="{StaticResource ExpanderStyle}"/>
                <Setter Property="ItemTemplate" Value="{StaticResource TreeViewItemTemplate}"/>
                <Setter Property="ItemEditTemplate" Value="{StaticResource EditTreeViewTemplate}"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle}"/>
                <Setter Property="ItemsIndent" Value="12"/>
                <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="telerik:RadTreeView">
                        <Grid x:Name="RootElement">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <telerik:TreeViewPanel IsItemsHost="True" IsVisualCacheEnabled="False"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.7">
                        <GradientStop Color="#FF88a1db" Offset="0"/>
                        <GradientStop Color="#FFABB9E2" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border BorderThickness="1">
        <Border.BorderBrush>
            <SolidColorBrush Color="Black" Opacity="0.5"/>
        </Border.BorderBrush>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="0.01*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border BorderThickness="0,0,0,1" Grid.Row="0">
                <Border.BorderBrush>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </Border.BorderBrush>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Height="26" Margin="2,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" Text="{Binding SearchText,Mode=TwoWay}"/>

                    <telerik:RadButton Grid.Column="1" Height="26" Margin="5" Command="{Binding SearchCommand}" ToolTipService.ToolTip="模糊查询">
                        <StackPanel Orientation="Horizontal" Margin="4 0">
                            <Image Width="15" Height="15" Source="../Images/find.png" />
                            <TextBlock Text="查询"/>
                        </StackPanel>
                    </telerik:RadButton>
                </Grid>
            </Border>

            <telerik:RadTreeView Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding TreeItems}" SelectedItem="{Binding CurrentTreeItem,Mode=TwoWay}" Style="{StaticResource TViewItemStyle}">
                <!--<telerik:RadTreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Setter Property="attach:Behaviours.ExpandingBehaviour" Value="{Binding EnterKeyCommand}"/>
                </Style>
            </telerik:RadTreeView.Resources>-->
                <telerik:RadContextMenu.ContextMenu>
                    <telerik:RadContextMenu x:Name="ContextMenu" Visibility="{Binding MenuVisibility}">
                        <telerik:RadMenuItem Header="添加区域" Tag="New Child" Command="{Binding AddRootNodeCommand}"  Visibility="{Binding RootVisibility,Mode=TwoWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"/>
                        <!--CommandParameter="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        <telerik:RadMenuItem Header="添加子区域" Tag="New Child" Command="{Binding AddChildNodeCommand}"  Visibility="{Binding RegionVisibility,Mode=TwoWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"/>
                        <!--CommandParameter="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        <telerik:RadMenuItem Header="添加同级区域" Tag="New Sibling" Command="{Binding AddPeerNodeCommand}"   Visibility="{Binding  RegionVisibility,Mode=TwoWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"/>
                        <!--CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type telerik:RadContextMenu}}, Path=PlacementTarget}"/>-->
                        <telerik:RadMenuItem Header="添加通道" Tag="New Chananel" Command="{Binding AddChannelCommand}"   Visibility="{Binding  RegionVisibility,Mode=TwoWay}"
                                         CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"/>
                        <!--CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type telerik:RadContextMenu}}, Path=PlacementTarget}"/>-->
                        <!--<telerik:RadMenuItem IsSeparator="True"/>-->
                        <telerik:RadMenuItem Header="编辑" Tag="Edit" Command="{Binding EditNodeCommand}"   Visibility="{Binding  MaintainVisibility,Mode=TwoWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"/>
                        <!--CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type telerik:RadContextMenu}}, Path=PlacementTarget}"/>-->
                        <telerik:RadMenuItem Header="删除" Tag="Delete" Command="{Binding DeleteNodeCommand}"   Visibility="{Binding  MaintainVisibility,Mode=TwoWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"/>
                        <!--CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type telerik:RadContextMenu}}, Path=PlacementTarget}"/>-->
                        <!--<telerik:RadMenuItem IsSeparator="True"/>-->
                        <!--<telerik:RadMenuItem Header="选中" Tag="Select" Command="{Binding SelectedNodeCommand}"   Visibility="{Binding  ChannelVisibility,Mode=TwoWay}"
                                         CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                        AncestorType={x:Type telerik:RadContextMenu}}, Path=PlacementTarget}"/>-->
                    </telerik:RadContextMenu>
                </telerik:RadContextMenu.ContextMenu>
                <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                    <utilities:EventToCommand Command="{Binding SelectedNodeCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            </telerik:RadTreeView>
        </Grid>
    </Border>
</UserControl>
