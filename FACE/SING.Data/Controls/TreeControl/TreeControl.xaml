<UserControl x:Class="SING.Data.Controls.TreeControl.TreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SING.Data.Controls.TreeControl"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:converter="clr-namespace:SING.Data.Controls.TreeControl.Converter"
             mc:Ignorable="d" >
    <UserControl.Resources>
        
        <converter:TreeViewItemWithConvert x:Key="TreeViewItemWithConvert"/>
        
        <Style x:Key="RadDropDownButtonStyle" TargetType="telerik:RadDropDownButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsOpen" Value="False"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="Wheat"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Visibility" Value="{Binding MenuDropVisibility}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="telerik:RadDropDownButton">
                        <Grid>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid Grid.Column="1" Background="Transparent">
                                    <Path x:Name="DropDownIndicator" Fill="White" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="5,4,5,0" Visibility="{Binding DropDownIndicatorVisibility}" VerticalAlignment="Top"
                                              RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L6.5000002,0.5 6.5000002,0.66296414 6.6629643,0.66296414 6.6629643,6.6629641 5.6629643,6.6629641 5.6629643,1.5 0.5,1.5 z">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="135" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Grid>
                            <Popup x:Name="DropDownPopup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsOpen,RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" StaysOpen="False">
                                <Grid>
                                    <Border Background="#66000000" BorderThickness="3" BorderBrush="#FF494E59">
                                        <Border BorderBrush="#B2AFAFAF" BorderThickness="1,1,1,1" Background="#F43A3D45">
                                            <ContentPresenter x:Name="DropDownPopupContent" ContentTemplate="{TemplateBinding DropDownContentTemplate}" Content="{TemplateBinding DropDownContent}"
                                                                  DataContext="{Binding DataContext,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsOpen" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard FillBehavior="Stop">
                                            <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" x:Key="ExpanderStyle">
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>

                        </ControlTemplate.Triggers>

                        <Grid>
                            <Grid x:Name="CollapsedStates" >
                                <Path x:Name="CollapsedVisual" Height="10" Width="5" 
										Stretch="Fill" Stroke="#FFE6E6E6" 
										Data="M1098.3334,527.90997 L1098.3334,536.30115 L1102.2695,532.36487 z"
										RenderTransformOrigin="0.5,0.5" />
                            </Grid>
                            <Grid x:Name="ExpandedStates" Opacity="0">
                                <Path x:Name="ExpandedVisual" Height="10" Width="5" IsHitTestVisible="False"
										Fill="#FFE6E6E6" Stretch="Fill" Stroke="#FFE6E6E6" 
										Data="M1098.3334,527.90997 L1098.3334,536.30115 L1102.2695,532.36487 z"
										RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="45" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TreeViewItemStyle" TargetType="telerik:RadTreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
            <!--<Setter Property="DefaultImageSrc" Value="{Binding ImageUrl}" />-->
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        </Style>

        <DataTemplate x:Key="EditTreeViewTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding Text, Mode=TwoWay}" Margin="5 0 0 0" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="Team">
            <StackPanel Orientation="Horizontal">
                <Image Width="10" x:Name="MeetingGroup_Image"  Source="../Images/channelLeftCameraNotlight.png"></Image>
                <TextBlock Margin="5,0,0,0" Foreground="#FFE6E6E6" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Text="{Binding Name}" />
            </StackPanel>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="Division" ItemTemplate="{StaticResource Team}" ItemsSource="{Binding Teams}">
            <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Margin="5 0 0 0"/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="League" ItemTemplate="{StaticResource Division}" ItemsSource="{Binding Divisions}">
            <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Margin="5 0 0 0"/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="Leagued" ItemTemplate="{StaticResource League}" ItemsSource="{Binding Leagues}">
            
            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Margin="5 0 0 0"/>
            
                <telerik:RadDropDownButton BorderThickness="0" DropDownOpened="ContextMenuOpened" Style="{StaticResource RadDropDownButtonStyle}" Margin="100,0,0,0" VerticalAlignment="Stretch" DropDownPlacement="Bottom" RenderTransformOrigin="0.5,0.5">

                    <telerik:RadDropDownButton.DropDownContent>
                        <telerik:RadContextMenu Width="100" Margin="0 0 -3 -3" BorderThickness="0" FontWeight="Bold">
                            <telerik:RadMenuItem Header="新增"/>

                            <telerik:RadMenuItem Header="修改" />

                            <telerik:RadMenuItem Header="删除"/>

                        </telerik:RadContextMenu>
                    </telerik:RadDropDownButton.DropDownContent>
                </telerik:RadDropDownButton>
            </StackPanel>
        </HierarchicalDataTemplate>
        
        <HierarchicalDataTemplate x:Key="TreeViewItemTemplate" ItemsSource="{Binding Items}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock Text="{Binding Text}" Margin="5 0 0 0" />
                <telerik:RadDropDownButton BorderThickness="0" DropDownOpened="DropDownMenuOpened" Style="{StaticResource RadDropDownButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Stretch" DropDownPlacement="Bottom" RenderTransformOrigin="0.5,0.5">

                    <telerik:RadDropDownButton.DropDownContent>
                        <telerik:RadContextMenu x:Name="DropContextMenu" Margin="0 0 -3 -3" BorderThickness="0" FontWeight="Bold" Opened="ContextMenuOpened" ItemClick="ContextMenuClick">

                            <telerik:RadMenuItem Header="添加子区域" Tag="New Child"/>
                            <telerik:RadMenuItem Header="添加同级区域" Tag="New Sibling"/>
                            <telerik:RadMenuItem Header="添加通道" Tag="New Chananel"/>
                            <telerik:RadMenuItem IsSeparator="True"/>
                            <telerik:RadMenuItem Header="删除" Tag="Delete"/>

                        </telerik:RadContextMenu>
                    </telerik:RadDropDownButton.DropDownContent>
                </telerik:RadDropDownButton>
            </Grid>
        </HierarchicalDataTemplate>

        <Style x:Key="{x:Type telerik:RadTreeView}" TargetType="{x:Type telerik:RadTreeView}">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="AutoScrollToSelectedItem" Value="True"/>
            <Setter Property="telerik:StyleManager.Theme" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ForceCursor" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="IsLineEnabled" Value="False"/>
            <Setter Property="IsRootLinesEnabled" Value="False"/>
            <Setter Property="IsExpandOnDblClickEnabled" Value="False"/>
            <Setter Property="IsExpandOnSingleClickEnabled" Value="False"/>
            <Setter Property="IsOptionElementsEnabled" Value="False"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="IsDragDropEnabled" Value="False"/>
            <Setter Property="IsTriStateMode" Value="False"/>
            <Setter Property="SelectedValuePath" Value="Name"/>
            <Setter Property="ExpanderStyle" Value="{StaticResource ExpanderStyle}"/>
            <Setter Property="ItemTemplate" Value="{StaticResource TreeViewItemTemplate}"/>
            <Setter Property="ItemEditTemplate" Value="{StaticResource EditTreeViewTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle}"/>
            <Setter Property="ItemsIndent" Value="12"/>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="telerik:RadTreeView">
                        <Grid x:Name="RootElement">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <telerik:TreeViewPanel IsItemsHost="True" IsVisualCacheEnabled="False"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.7">
                        <GradientStop Color="#FF88a1db" Offset="0"/>
                        <GradientStop Color="#FFABB9E2" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
        </Style>

      
    </UserControl.Resources>
    
    <UserControl.DataContext>
        <local:TreeViewModel />
    </UserControl.DataContext>
    
    <Grid>
        <telerik:RadTreeView ItemsSource="{Binding Items}" x:Name="myTreeControl">

            <telerik:RadContextMenu.ContextMenu>
                <telerik:RadContextMenu x:Name="ContextMenu" Visibility="{Binding MenuVisibility}" ItemClick="ContextMenuClick" Opened="ContextMenuOpened">
                    <telerik:RadMenuItem Header="添加子区域" Tag="New Child"/>
                    <telerik:RadMenuItem Header="添加同级区域" Tag="New Sibling"/>
                    <telerik:RadMenuItem Header="添加通道" Tag="New Chananel"/>
                    <telerik:RadMenuItem IsSeparator="True"/>
                    <telerik:RadMenuItem Header="编辑" Tag="Edit"/>
                    <telerik:RadMenuItem Header="删除" Tag="Delete"/>
                    <telerik:RadMenuItem IsSeparator="True"/>
                    <telerik:RadMenuItem Header="选中" Tag="Select"/>
                </telerik:RadContextMenu>
            </telerik:RadContextMenu.ContextMenu>
        </telerik:RadTreeView>
    </Grid>
</UserControl>
